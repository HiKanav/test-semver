name: Auto Tag

on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write # Explicitly grant write permissions to contents

jobs:
  auto-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install Commitizen
        run: npm install -g commitizen

      - name: Generate Tag
        id: tag
        run: |
          # Fetch all tags
          git fetch --tags

          # List all tags for debugging purposes
          echo "Listing all tags:"
          git tag -l

          # Get the latest tag
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null)
          echo "Latest tag: $latestTag"

          # Set up Git user
          git config user.name "Omkar [Bot]"
          git config user.email "Omkar@bot.com"

          # Generate the new tag based on the latest tag
          if [[ -z "$latestTag" ]]; then
            echo "No tags found. Initializing the first tag."
            newVersion="1.0.0"
          else
            echo "Latest tag: $latestTag"
            newVersion=$(npm version patch --no-git-tag-version)
          fi
          echo "New version: $newVersion"

          # Set output
          echo "::set-output name=new_version::$newVersion"

      - name: Commit Version Bump
        run: |
          git add package.json
          git commit -m "Bump version to ${{ steps.tag.outputs.new_version }}"

      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag v${{ steps.tag.outputs.new_version }}
          git push origin v${{ steps.tag.outputs.new_version }}

      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin main
